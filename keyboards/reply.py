from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from data.loader import db


def generate_main_menu():
    """
    –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    :return:
    """
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    order = KeyboardButton(text='üõç –ó–∞–∫–∞–∑–∞—Ç—å')
    review = KeyboardButton(text='‚úç –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
    feedback = KeyboardButton(text='‚òé –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏')
    info = KeyboardButton(text='‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    settings = KeyboardButton(text='‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    markup.row(order)
    markup.row(review, feedback)
    markup.row(info, settings)
    return markup


def generate_type_of_order():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    delivery = KeyboardButton(text='üöñ –î–æ—Å—Ç–∞–≤–∫–∞')
    pickup = KeyboardButton(text='üèÉüèª‚Äç‚ôÇÔ∏è –°–∞–º–æ–≤—ã–≤–æ–∑')
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    markup.row(delivery, pickup)
    markup.row(back)
    return markup


def settings():
    """
    –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    :return:
    """
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    refresh_fio = KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û')
    refresh_number = KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä')
    language = KeyboardButton(text='üìç –Ø–∑—ã–∫')
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    markup.row(refresh_fio, refresh_number)
    markup.row(language)
    markup.row(back)
    return markup


def refactor_phone():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    manually = KeyboardButton(text='–í–≤–µ—Å—Ç–∏ –≤ —Ä—É—á–Ω—É—é')
    contact = KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact=True)
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    markup.row(manually, contact)
    markup.row(back)
    return markup


def generate_menu_categories():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    back = KeyboardButton(text='üö© –ö —Ñ–∏–ª–∏–∞–ª–∞–º')
    cart = KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∞')
    main_mark = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    categories = [i[0] for i in db.get_categories()]
    buttons = []
    for category in categories:
        btn = KeyboardButton(text=category)
        buttons.append(btn)
    markup.add(*buttons, main_mark, back, cart)
    return markup


def generate_filial():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ')
    filials = db.get_filials_names()
    buttons = []
    for filial in filials:
        btn = KeyboardButton(text=filial[0])
        buttons.append(btn)
    markup.add(*buttons)
    markup.add(back)
    return markup


def generate_delivery():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    location = KeyboardButton(text='üö© –õ–æ–∫–∞—Ü–∏—è', request_location=True)
    my_address = KeyboardButton(text='üó∫ –ú–æ–∏ –∞–¥—Ä–µ—Å–∞')
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    markup.row(location, my_address)
    markup.row(back)
    return markup


def generate_filials_info():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')
    filials = db.get_filials_names()
    buttons = []
    for filial in filials:
        btn = KeyboardButton(text='‚Ñπ' + filial[0])
        buttons.append(btn)
    markup.add(*buttons)
    markup.add(back)
    return markup


def menu_information():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    filial = KeyboardButton(text='üè™ –û —Ñ–∏–ª–∏–∞–ª–∞—Ö')
    mobile_apps = KeyboardButton(text='üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')
    about_us = KeyboardButton(text='üìÉ –û –Ω–∞—Å')
    markup.row(filial)
    markup.row(mobile_apps, about_us)
    markup.row(back)
    return markup


def generate_review():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')
    bt1 = KeyboardButton(text='üò§–•–æ—á—É –ø–æ–∂–∞–ª–æ–≤–∞—Ç—Å—è üëéüèª')
    bt2 = KeyboardButton(text='‚òπÔ∏è–ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –Ω–∞ 2 ‚≠êÔ∏è‚≠êÔ∏è')
    bt3 = KeyboardButton(text='üòê–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ 3 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è')
    bt4 = KeyboardButton(text='‚ò∫Ô∏è–ù–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–∞ 4 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è')
    bt5 = KeyboardButton(text='üòä–í—Å–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –Ω–∞ 5 ‚ù§Ô∏è')
    markup.row(bt5)
    markup.row(bt4)
    markup.row(bt3)
    markup.row(bt2)
    markup.row(bt1)
    markup.row(back)
    return markup


def generate_products(category_title):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    back = KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
    cart = KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∞')
    products = db.get_products_by_category(category_title=category_title)
    buttons = []
    for product in products:
        btn = KeyboardButton(text=product[0])
        buttons.append(btn)
    markup.add(*buttons)
    markup.add(cart)
    markup.add(back)
    return markup
